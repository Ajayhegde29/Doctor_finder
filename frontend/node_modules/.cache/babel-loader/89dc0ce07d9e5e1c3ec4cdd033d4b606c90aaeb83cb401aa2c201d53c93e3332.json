{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ajay\\\\doctor_map\\\\frontend\\\\src\\\\components\\\\DoctorMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst defaultCenter = {\n  lat: 12.9716,\n  lng: 77.5946\n};\nconst DoctorMap = ({\n  doctors\n}) => {\n  _s();\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyCQdyy32Cja9Q1tHVw74ESA_RdEHTA1Py8\"\n  });\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n\n  // Center map on the first doctor if available\n  const center = doctors.length > 0 ? {\n    lat: doctors[0].location.coordinates[1],\n    lng: doctors[0].location.coordinates[0]\n  } : defaultCenter;\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 13,\n    children: [doctors.map(doc => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: doc.location.coordinates[1],\n        lng: doc.location.coordinates[0]\n      },\n      onClick: () => setSelectedDoctor(doc),\n      title: doc.name\n    }, doc._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), selectedDoctor && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedDoctor.location.coordinates[1],\n        lng: selectedDoctor.location.coordinates[0]\n      },\n      onCloseClick: () => setSelectedDoctor(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedDoctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedDoctor.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorMap, \"nAU0MGrxaevnuaS73WCLd6drbDc=\", false, function () {\n  return [useLoadScript];\n});\n_c = DoctorMap;\nexport default DoctorMap;\nvar _c;\n$RefreshReg$(_c, \"DoctorMap\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","InfoWindow","useLoadScript","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","DoctorMap","doctors","_s","selectedDoctor","setSelectedDoctor","isLoaded","googleMapsApiKey","children","fileName","_jsxFileName","lineNumber","columnNumber","center","length","location","coordinates","mapContainerStyle","zoom","map","doc","position","onClick","title","name","_id","onCloseClick","address","_c","$RefreshReg$"],"sources":["C:/Ajay/doctor_map/frontend/src/components/DoctorMap.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nconst defaultCenter = {\r\n  lat: 12.9716,\r\n  lng: 77.5946\r\n};\r\n\r\nconst DoctorMap = ({ doctors }) => {\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyCQdyy32Cja9Q1tHVw74ESA_RdEHTA1Py8\" \r\n  });\r\n\r\n  if (!isLoaded) return <p>Loading map...</p>;\r\n\r\n  // Center map on the first doctor if available\r\n  const center = doctors.length > 0\r\n    ? {\r\n        lat: doctors[0].location.coordinates[1],\r\n        lng: doctors[0].location.coordinates[0]\r\n      }\r\n    : defaultCenter;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={13}\r\n    >\r\n      {doctors.map((doc) => (\r\n        <Marker\r\n          key={doc._id}\r\n          position={{\r\n            lat: doc.location.coordinates[1],\r\n            lng: doc.location.coordinates[0]\r\n          }}\r\n          onClick={() => setSelectedDoctor(doc)}\r\n          title={doc.name}\r\n        />\r\n      ))}\r\n\r\n      {selectedDoctor && (\r\n        <InfoWindow\r\n          position={{\r\n            lat: selectedDoctor.location.coordinates[1],\r\n            lng: selectedDoctor.location.coordinates[0]\r\n          }}\r\n          onCloseClick={() => setSelectedDoctor(null)}\r\n        >\r\n          <div>\r\n            <h4>{selectedDoctor.name}</h4>\r\n            <p>{selectedDoctor.address}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n};\r\n\r\nexport default DoctorMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}